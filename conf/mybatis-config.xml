<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 
		1、mybatis可以使用properties来引入外部的properties配置文件的内容 
			resource:引入类路径下资源
			url:引入网络或磁盘路径下资源
	-->
	<properties resource="dbconfig.properties"></properties>
	<!-- 
		2、使用settings可以设置mybatis运行时行为
	 -->
	<settings>
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
		<!-- 支持懒加载 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>
	</settings>
	<!-- 
		3、typeAliases：别名处理器，可以为java类型起别名，别名不区分大小写
	 -->
	<typeAliases>
		<!-- <typeAlias type="cn.ksdshpx.mybatis.beans.Employee" alias="employee"/> -->
		<!-- 
			package:为某个包下的所有类批量起别名,若有名称重复，使用@Alias注解具体指定
				name:指定包名(为当前包以及下面所有的后代包的每一个类起一个默认别名(类名小写))
		-->
		<package name="cn.ksdshpx.mybatis.beans"/>
	</typeAliases>
	<!-- 
		4、MyBatis可以配置多种环境
			  environment：配置一个具体的环境信息
				 transactionManager:事务管理器(JDBC(JdbcTransactionFactory)或MANAGED(ManagedTransactionFactory))
				 dataSource:数据源(UNPOOLED(UnpooledDataSourceFactory)或POOLED(PooledDataSourceFactory)或JNDI(JndiDataSourceFactory))
	 -->
	<environments default="dev_mysql">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url"
					value="${jdbc.url}" />
				<property name="username" value="${jdbc.user}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
		<environment id="dev_mysql">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url"
					value="${jdbc.url}" />
				<property name="username" value="${jdbc.user}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
		<environment id="dev_oracle">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${orcl.driver}" />
				<property name="url"
					value="${orcl.url}" />
				<property name="username" value="${orcl.user}" />
				<property name="password" value="${orcl.password}" />
			</dataSource>
		</environment>
	</environments>
	<!-- 
		5、databaseIdProvider：支持多数据库厂商
			type="DB_VENDOR": VendorDatabaseIdProvider,作用就是得到数据库厂商的标识(驱动自带)，mybatis就能根据不同的数据库厂商标识来执行不同的sql
	 -->
	<databaseIdProvider type="DB_VENDOR">
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlserver"/>
	</databaseIdProvider>
	<!-- 
		mapper:将我们写好的sql映射文件一定要注册到全局配置文件中 
			注册配置文件
				resource:引入类路径下的sql映射文件
				url:引入网络或磁盘路径下的sql映射文件
				
			注册接口
			class:直接引用(注册接口)接口
				1、有sql映射文件，映射文件和接口必须同名同位置
				2、没有sql映射文件，所有sql都是利用注解写在接口上
				
				推荐：
				    重要的或复杂的DAO接口写sql映射文件
				    不重要或简单的DAO接口可以使用注解
	-->
	<mappers>
		<mapper resource="cn/ksdshpx/mybatis/dao/EmployeeMapper.xml" />
		<mapper resource="cn/ksdshpx/mybatis/dao/EmployeeMapperDynamicSQL.xml" />
		<mapper resource="cn/ksdshpx/mybatis/dao/DepartmentMapper.xml" />
		<mapper resource="cn/ksdshpx/mybatis/dao/EmployeeMapperPlus.xml" />
		<mapper class="cn.ksdshpx.mybatis.dao.EmployeeMapperAnnotation"/>
		<!-- 批量注册，映射文件和接口必须同名同位置 -->
		<!-- <package name="cn.ksdshpx.mybatis.dao"/> -->
	</mappers>
</configuration>